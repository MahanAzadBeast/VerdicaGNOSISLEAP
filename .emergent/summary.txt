<analysis>
The previous AI engineer's work trajectory was multifaceted, initially focusing on two core applications: developing the Cytotoxicity Prediction Model (Gnosis II/Model 2) and troubleshooting the Ligand Activity Predictor (Gnosis I/Model 1). Significant effort was expended on Model 2, dealing with ChemBERTa integration challenges, data access issues on Modal, and ultimately struggling with training hangs. A critical pivot occurred as the user steered attention to fixing Model 1, involving comprehensive UI and backend refinements for target visibility, accurate prediction filtering (removing Ki, refining EC50), and ensuring only real, trained predictions are displayed. Concurrently, a robust Model Registry was built with S3 integration for model artifacts and curated datasets, establishing an enterprise-grade MLOps foundation. The most recent directive is to implement an Applicability Domain (AD) layer for Gnosis I, a complex task involving multi-view scoring and conformal prediction, for which the initial framework setup has just begun.
</analysis>

<product_requirements>
The GNOSIS platform aims to predict molecular properties and drug sensitivity.
1.  **Ligand Activity Predictor (Gnosis I / Model 1):** Predicts IC50, EC50, and Ki for oncoproteins/tumor suppressors with an R² > 0.6. The requirement evolved to expand beyond IC50 to genuine Ki/EC50 predictions from comprehensive datasets and update the UI. It leverages a ChemBERTa transferomer. Key updates included:
    *   No synthetic or heuristic predictions; only data-backed predictions.
    *   Accurate display of available targets in UI.
    *   Removal of invalid Ki predictions (e.g., values > 100 µM) due to corrupted training data.
    *   Dynamic filtering of EC50 predictions based on sufficient training data (>= 25 samples).
    *   Frontend UI to dynamically show only proteins available for selection based on chosen assay types.
    *   Adding an Applicability Domain (AD) layer to compute per-target AD scores, calibrate confidence, return conformal intervals, gate implausible kinase predictions, and integrate into the existing API without retraining.
2.  **Cytotoxicity Prediction Model (Gnosis II / Model 2):** Designed for cancer cell IC50 prediction, integrating genomic context. Goal: R² > 0.7 using *only* real, full-scale datasets (GDSC, DepMap PRISM), strict data cleaning (pIC50 conversion, R² filters, deduplication), real genomic features, 80/10/10 scaffold split, tissue-stratified training, and a frozen Gnosis ChemBERTa encoder with a 2-layer MLP for genomics. The user later renamed this module to Gnosis II.
3.  **Model Registry & Data Management:** Implement a hybrid model registry (MongoDB for metadata, S3 for artifacts and datasets) to organize models, versions, and lineage for reproducibility, with AWS S3 (us-east-1) as the single source of truth for both datasets and model artifacts. Curated datasets and evaluation reports from Modal training should be synced to S3 with checksums. Four new modules were envisioned: Downstream Omics, Toxicity & Safety, Clinical Trials prediction, and a Generative module.
</product_requirements>

<key_technical_concepts>
-   **Molecular Modeling**: ChemBERTa (fine-tuned), RDKit (SMILES, ECFP4), PyTorch.
-   **ML Frameworks**: PyTorch Lightning, Hugging Face Transformers, FAISS (kNN).
-   **Web Stack**: React.js (frontend), FastAPI (backend), MongoDB (metadata).
-   **Cloud/MLOps**: Modal.com (training, volumes), AWS S3 (artifact/data storage).
-   **Bioinformatics**: SMILES, IC₅₀/pIC₅₀, EC₅₀/pEC₅₀, Ki/pKi, Genomic Features.
-   **ML Strategies**: Transfer Learning, Fine-tuning, Scaffold Splitting, Conformal Prediction, Applicability Domain (AD).
</key_technical_concepts>

<code_architecture>

-   ****: Main FastAPI entry point.
    -   **Importance**: Handles all API routing, including Model 1 (Gnosis I), Model 2 (Gnosis II), and the newly added Model Registry endpoints. It manages predictor initialization.
    -   **Changes**: Modified to gracefully initialize  even if  is missing. Later updated to include  router.
-   ****: Gnosis I backend logic.
    -   **Importance**: Defines  for Ligand Activity prediction, managing ChemBERTa encoder, target lists, and predictions.
    -   **Changes**: Initially updated to initialize  even if  is , and  was enhanced with a fallback. Critically, it was further modified to:
        *   Remove Ki predictions entirely due to invalid training data producing unrealistic values.
        *   Refine  to ensure EC50 predictions are only returned for targets with >=25 training samples, eliminating low-quality data.
        *   Adjust the logic that uses  to ensure all 62 targets the model was trained on are recognized for predictions, rather than a hardcoded subset.
-   ****: Frontend component for Gnosis I.
    -   **Importance**: Handles user interaction, input, and displays predictions for Ligand Activity.
    -   **Changes**: Removed hardcoded  to allow all 62 targets to be visible. Removed Ki from assay type selection. Implemented dynamic target filtering based on selected assay types (IC50, EC50) and their training data availability from a new backend API endpoint. Updated UI elements to reflect filtered target counts.
-   ****: Gnosis II backend logic.
    -   **Importance**: Core logic for Gnosis II prediction, including molecular/genomic feature extraction, and model loading.
    -   **Changes**: Still points to an RDKit-based model due to prior ChemBERTa training failures. ( updated to 30 features). The model was renamed to Gnosis II.
-   **New Model Registry Files ()**: A suite of new files created to implement the hybrid Model Registry.
    -   : Initializes the package.
    -   : Defines 15+ FastAPI endpoints for model registration, versioning, artifact management, and agent discovery.
    -   : Implements logic for AI agents to discover, select, and load models dynamically.
    -   : Command-line interface for managing the registry (health checks, model registration).
    -   : Handles MongoDB schema and interactions for storing model metadata.
    -   : Script to create YAML manifests for registered models.
    -   : Manages YAML manifest creation, validation, and parsing.
    -   : Script to rename models within the registry (e.g., Cytotoxicity Predictor to Gnosis II).
    -   : Manages S3 interactions for uploading, downloading, and verifying model artifacts and datasets.
    -   : Script to upload existing model artifacts to S3.
    -   : Script to update dataset metadata in the MongoDB registry after S3 sync.
-   **New Modal Training Scripts ()**: Scripts for dataset and model syncing with S3.
    -   : Modal job to directly transfer curated datasets from Modal volumes to S3.
    -   : Script to configure AWS credentials as Modal secrets.
    -   , : Scripts to inspect and list contents of Modal volumes.
    -   , : Targeted Modal jobs to transfer specific curated datasets and production models to S3.
    -   , : Scripts for optimizing Modal storage by removing non-essential training artifacts (optimizer states, intermediate checkpoints) and verifying cleanup.
-   **Frontend Homepage ( or similar)**
    -   **Importance**: The main landing page for the application.
    -   **Changes**: Removed a problematic Spline 3D animation/WebGL component that was causing loading failures and click interception issues, replacing it with a simpler, functional CSS-based particle animation.

</code_architecture>

<pending_tasks>
-   Implement the full Applicability Domain (AD) layer for Gnosis I, including:
    -   Building a per-target fingerprint database.
    -   Building per-target embedding stats and kNN indices.
    -   Implementing multi-view AD scoring (Tanimoto, Mahalanobis, kNN density, Leverage, Protein/Assay context).
    -   Adding inductive conformal prediction for confidence intervals.
    -   Adding calibrated confidence mapping.
    -   Implementing mechanism gating and kinase sanity checks (hinge binder classifier, optional micro-docking).
    -   Exposing a single function .
-   Further address the Model 2 ChemBERTa training hang issues, if Model 2 development resumes.
</pending_tasks>

<current_work>
Immediately before this summary request, the AI engineer was tasked with implementing a sophisticated **Applicability Domain (AD) layer** for the Gnosis I (Ligand Activity Predictor) module. This is a significant enhancement aimed at improving the reliability and trustworthiness of predictions by:
1.  **Computing per-target AD scores** from multiple molecular and contextual views.
2.  **Calibrating confidence** and providing **conformal prediction intervals**.
3.  **Gating or penalizing implausible kinase predictions**.
4.  **Integrating** seamlessly into the existing inference API **without requiring model retraining**.

The user provided a detailed specification for this feature, including inputs, desired outputs (e.g., , , , , ), high-level tasks, and detailed implementation steps, including pseudocode.

The current work has just begun with the AI engineer acknowledging the task and identifying the first conceptual Phase 1: Create the AD Framework Structure to begin this complex implementation. No specific file modifications have been reported for the AD layer in the immediate last message, only the overall acceptance of the task.
</current_work>

<optional_next_step>
The next step is to begin implementing the  function and the per-target fingerprint database builder as part of the AD layer for Gnosis I.
</optional_next_step>
